import java.io.File;

includeTargets << grailsScript("_GrailsInit")
includeTargets << new File("${backbonePluginDir}/scripts/_BackboneConfig.groovy")

void extractTemplatesFromDir (File baseFile, Map map) {
	
	baseFile.listFiles().each { File file ->
		
		// If is a directory, creates the map to allocate the child templates
		if (file.isDirectory()) {
			
			Map childMap = [:]
			extractTemplatesFromDir(file, childMap)
			map.put(file.name, childMap)
		
		// If the file is an html, extracts the template
		} else if (file.name.endsWith('.html')) {
		
			String varName = file.name.replaceAll('.html', '') + 'Template'
			String htmlTemplate = ''
			
			// Extracts the html template
			file.eachLine { line -> // Removes the spaces
				htmlTemplate += line.trim()
			}
			htmlTemplate = htmlTemplate.replaceAll("(?s)<!--.*?-->", "") // Removes the html comments
			htmlTemplate = htmlTemplate.replaceAll("'", "\\\\'") // Escapes the simple quotes ' => \'
			
			// Adds the html template to the map
			map.put(varName, htmlTemplate)
		}
	}
}

/**
 * Converts a map to json.
 * */
String asJson (Map m) {
	
	String json = ''
	
	m.keySet().each { def k ->
		
		String tempLine = ''
		
		if (!(m[k] instanceof String)) { // The value is a Map
			tempLine = "${k}:" + asJson(m[k])
		} else { // The value is a String
			tempLine = "${k}:'${m[k]}'"
		}
		json += (json == '') ? tempLine : ',' + tempLine
	}
	json = "{${json}}"
	return json
}

target(compileTemplates: "Compile the Backbone html templates and generates a JS file with all templates as variables!") {
	
	loadBackboneConfig()
	
	// Location in where are allocated the html templates
	String path = config.backbone.templates + '/'
	File baseDir = new File(path)
	
	if (baseDir.exists()) {
		
		// The automatic file to be generated
		String generatedFilePath = path + 'compiledTemplates.js'
		File generatedFile = new File(generatedFilePath)
		
		if (generatedFile.exists()) {
			generatedFile.delete()
			generatedFile = new File(generatedFilePath)
		}
		
		Map templatesData = [:]
		extractTemplatesFromDir(baseDir, templatesData)
		String json = asJson(templatesData) + ";"
		
		// Writes the file
		generatedFile.append("/** File generated by script CompileBackboneTemplates on date ${new Date()} */\n")
		generatedFile.append("App.templates=${json}")
		
		println 'The backbone template bundle created in path: ' + generatedFile.path
		
	} else {
		println 'ERROR: The backbone template directory does not exists!'
	}
}